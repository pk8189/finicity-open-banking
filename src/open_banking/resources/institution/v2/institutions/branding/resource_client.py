"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import (
    SyncBaseClient,
    RequestOptions,
    AsyncBaseClient,
    default_request_options,
)
import typing
from open_banking.types.institution.v2.institutions.branding import models


class BrandingClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def list(
        self,
        *,
        institution_id: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.BrandingWrapper:
        """
        Return the branding information for a financial institution.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/institution/v2/institutions/{institution_id}/branding",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            cast_to=models.BrandingWrapper,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncBrandingClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def list(
        self,
        *,
        institution_id: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.BrandingWrapper:
        """
        Return the branding information for a financial institution.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/institution/v2/institutions/{institution_id}/branding",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            cast_to=models.BrandingWrapper,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
