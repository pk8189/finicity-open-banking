"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import (
    to_encodable,
    QueryParams,
    default_request_options,
    encode_param,
    RequestOptions,
    AsyncBaseClient,
    SyncBaseClient,
)
from open_banking.types.analytics.balance.v1.customer.fcra import params, models
import typing


class FcraClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.BalanceAndCashFlowAnalyticsReportConstraints,
        customer_id: str,
        reference_number: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ObbAnalyticsReportAck:
        """
        Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.

        Calculated metrics include:
        * Current/available account balances
        * Minimum/maximum/average account balances over the requested time
          period and broken down by month

        * Daily ending balance of accounts for each day in the requested time
          period

        * Propensity of the customer's account balances to increase week over
          week

        * Number of days in the requested time period ending with a negative
          balance


        This version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.

        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report - FCRA_ (operation: _GetObbAnalyticsReportFCRA_).

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if reference_number is not None:
            _query["reference-number"] = encode_param(reference_number, False)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerBalanceAndCashFlowAnalyticsReportConstraints,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path=f"/analytics/balance/v1/customer/{customer_id}/fcra",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            query_params=_query,
            json=_json,
            cast_to=models.ObbAnalyticsReportAck,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncFcraClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.BalanceAndCashFlowAnalyticsReportConstraints,
        customer_id: str,
        reference_number: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ObbAnalyticsReportAck:
        """
        Balance Analytics for Business analyzes bank balances over time to report metrics and identify behavior that may indicate risk.

        Calculated metrics include:
        * Current/available account balances
        * Minimum/maximum/average account balances over the requested time
          period and broken down by month

        * Daily ending balance of accounts for each day in the requested time
          period

        * Propensity of the customer's account balances to increase week over
          week

        * Number of days in the requested time period ending with a negative
          balance


        This version of the API is intended for production use. It maintains and enforces all compliance with FCRA rules and requirements.

        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get Balance Analytics Report - FCRA_ (operation: _GetObbAnalyticsReportFCRA_).

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if reference_number is not None:
            _query["reference-number"] = encode_param(reference_number, False)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerBalanceAndCashFlowAnalyticsReportConstraints,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path=f"/analytics/balance/v1/customer/{customer_id}/fcra",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            query_params=_query,
            json=_json,
            cast_to=models.ObbAnalyticsReportAck,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
