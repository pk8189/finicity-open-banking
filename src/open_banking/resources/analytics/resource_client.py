"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import SyncBaseClient, AsyncBaseClient
from open_banking.resources.analytics.data import AsyncDataClient, DataClient
from open_banking.resources.analytics.balance import BalanceClient, AsyncBalanceClient
from open_banking.resources.analytics.cashflow import (
    AsyncCashflowClient,
    CashflowClient,
)
from open_banking.resources.analytics.payment_history import (
    AsyncPaymentHistoryClient,
    PaymentHistoryClient,
)


class AnalyticsClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.data = DataClient(base_client=self._base_client)
        self.balance = BalanceClient(base_client=self._base_client)
        self.cashflow = CashflowClient(base_client=self._base_client)
        self.payment_history = PaymentHistoryClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)


class AsyncAnalyticsClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.data = AsyncDataClient(base_client=self._base_client)
        self.balance = AsyncBalanceClient(base_client=self._base_client)
        self.cashflow = AsyncCashflowClient(base_client=self._base_client)
        self.payment_history = AsyncPaymentHistoryClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
