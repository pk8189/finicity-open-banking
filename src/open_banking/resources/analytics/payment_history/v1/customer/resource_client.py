"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import (
    SyncBaseClient,
    RequestOptions,
    QueryParams,
    AsyncBaseClient,
    encode_param,
    default_request_options,
)
from open_banking.resources.analytics.payment_history.v1.customer.fcra import (
    FcraClient,
    AsyncFcraClient,
)
import typing
from open_banking.types.analytics.payment_history.v1.customer import models


class CustomerClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.fcra = FcraClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        customer_id: str,
        reference_number: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ObbAnalyticsReportAck:
        """
        Payment history report analyzes up to 12-months of transactions and predicts the probability that a SMB will experience a payment risk event, such as NSF/Overdraft or missed recurring payments, in the near future when making a payment. The Risk Score provided in the report is a 2-digit ranking with four levels of risk going from low to high.

        Some of the highlights of calculated risk present in the report include:
        * Risk Score representing the likelihood of a missed payment
          based on analysis of permissioned open-banking data

        * Monthly average balance for all accounts by month in the requested
          time period

        * Total deposit amount by month for all accounts in the requested time
          period

        * Total withdrawal amounts by month for all accounts in the requested
          time period

        * Number of NSF counts and aggregate amount per month in the requested
          time period

        * Recurring loan payment amounts per month in the requested time period
        * Insurance payment amount per month in the requested time period
        * Tax payment amounts per month in the requested time period

        This version of the API is intended for piloting and integration testing your application with the Payment History product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Payment History - FCRA_ for the FCRA compliant version of this API.

        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get OBB Analytics Report_ (operation: _GetObbAnalyticsReport_).
        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if reference_number is not None:
            _query["reference-number"] = encode_param(reference_number, False)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path=f"/analytics/payment-history/v1/customer/{customer_id}",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            query_params=_query,
            cast_to=models.ObbAnalyticsReportAck,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncCustomerClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.fcra = AsyncFcraClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        customer_id: str,
        reference_number: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ObbAnalyticsReportAck:
        """
        Payment history report analyzes up to 12-months of transactions and predicts the probability that a SMB will experience a payment risk event, such as NSF/Overdraft or missed recurring payments, in the near future when making a payment. The Risk Score provided in the report is a 2-digit ranking with four levels of risk going from low to high.

        Some of the highlights of calculated risk present in the report include:
        * Risk Score representing the likelihood of a missed payment
          based on analysis of permissioned open-banking data

        * Monthly average balance for all accounts by month in the requested
          time period

        * Total deposit amount by month for all accounts in the requested time
          period

        * Total withdrawal amounts by month for all accounts in the requested
          time period

        * Number of NSF counts and aggregate amount per month in the requested
          time period

        * Recurring loan payment amounts per month in the requested time period
        * Insurance payment amount per month in the requested time period
        * Tax payment amounts per month in the requested time period

        This version of the API is intended for piloting and integration testing your application with the Payment History product. It does not adhere to FCRA requirements, and should not be used for production/lending purposes. See _Generate Payment History - FCRA_ for the FCRA compliant version of this API.

        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        A successful call to this API will generate analytics and store a report within Finicity. The report can be retrieved via _Get OBB Analytics Report_ (operation: _GetObbAnalyticsReport_).
        *Note:* this is a premium service, billable per every successful API call for non-testing customers.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if reference_number is not None:
            _query["reference-number"] = encode_param(reference_number, False)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path=f"/analytics/payment-history/v1/customer/{customer_id}",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            query_params=_query,
            cast_to=models.ObbAnalyticsReportAck,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
