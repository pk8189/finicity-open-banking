"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import (
    AsyncBaseClient,
    RequestOptions,
    default_request_options,
    SyncBaseClient,
)
import typing
from open_banking.types.aggregation.v1.customers.accounts.owner import models


class OwnerClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def list(
        self,
        *,
        customer_id: str,
        account_id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AccountOwner:
        """
        Retrieve the names and addresses of the account owner from a financial institution.

        Note: this is a premium service, billable per every successful API call.

        This service retrieves account data from the institution. This usually returns quickly, but in some scenarios may take a few minutes to complete. In the event of a timeout condition, retry the call.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/aggregation/v1/customers/{customer_id}/accounts/{account_id}/owner",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            cast_to=models.AccountOwner,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncOwnerClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def list(
        self,
        *,
        customer_id: str,
        account_id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AccountOwner:
        """
        Retrieve the names and addresses of the account owner from a financial institution.

        Note: this is a premium service, billable per every successful API call.

        This service retrieves account data from the institution. This usually returns quickly, but in some scenarios may take a few minutes to complete. In the event of a timeout condition, retry the call.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/aggregation/v1/customers/{customer_id}/accounts/{account_id}/owner",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            cast_to=models.AccountOwner,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
