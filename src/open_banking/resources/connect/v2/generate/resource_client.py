"""File Generated by Sideko (sideko.dev)"""

from open_banking.core import (
    SyncBaseClient,
    to_encodable,
    RequestOptions,
    default_request_options,
    AsyncBaseClient,
)
from open_banking.resources.connect.v2.generate.fix import FixClient, AsyncFixClient
from open_banking.resources.connect.v2.generate.joint_borrower import (
    JointBorrowerClient,
    AsyncJointBorrowerClient,
)
from open_banking.resources.connect.v2.generate.lite import AsyncLiteClient, LiteClient
from open_banking.resources.connect.v2.generate.microentry import (
    MicroentryClient,
    AsyncMicroentryClient,
)
from open_banking.types.connect.v2.generate import models, params
import typing


class GenerateClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.fix = FixClient(base_client=self._base_client)
        self.joint_borrower = JointBorrowerClient(base_client=self._base_client)
        self.lite = LiteClient(base_client=self._base_client)
        self.microentry = MicroentryClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.ConnectParameters,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ConnectUrl:
        """
        Generate a Connect URL link to add within your own applications.

        Optional Parameters:
        * `experience`: Configure different customer experiences per Connect session by changing the brand, color, logo, icon, the type of credit decisioning report to generate after the session ends, and more.
        * `language`: By default, the Connect application is in English. You don't need to pass  this parameter unless you want to translate Connect into one of our supported languages.

          * Spanish (United States)
          * French (Canada)


        MVS Developers: You can pre-populate the consumer's SSN on the Find employment records page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(item=data, dump_with=params._SerializerConnectParameters)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/connect/v2/generate",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            json=_json,
            cast_to=models.ConnectUrl,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncGenerateClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.fix = AsyncFixClient(base_client=self._base_client)
        self.joint_borrower = AsyncJointBorrowerClient(base_client=self._base_client)
        self.lite = AsyncLiteClient(base_client=self._base_client)
        self.microentry = AsyncMicroentryClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.ConnectParameters,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.ConnectUrl:
        """
        Generate a Connect URL link to add within your own applications.

        Optional Parameters:
        * `experience`: Configure different customer experiences per Connect session by changing the brand, color, logo, icon, the type of credit decisioning report to generate after the session ends, and more.
        * `language`: By default, the Connect application is in English. You don't need to pass  this parameter unless you want to translate Connect into one of our supported languages.

          * Spanish (United States)
          * French (Canada)


        MVS Developers: You can pre-populate the consumer's SSN on the Find employment records page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.

        _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(item=data, dump_with=params._SerializerConnectParameters)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/connect/v2/generate",
            auth_names=["FinicityAppKey", "FinicityAppToken"],
            json=_json,
            cast_to=models.ConnectUrl,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
