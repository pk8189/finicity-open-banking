"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class MicroEntryVerifyRequestParameter(typing_extensions.TypedDict):
    """
    No description specified
    """

    account_id: typing_extensions.NotRequired[str]
    customer_id: typing_extensions.NotRequired[str]
    experience: typing_extensions.NotRequired[str]
    partner_id: typing_extensions.NotRequired[str]
    redirect_uri: typing_extensions.NotRequired[str]
    webhook: typing_extensions.NotRequired[str]
    webhook_content_type: typing_extensions.NotRequired[str]
    webhook_data: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    webhook_headers: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]


class _SerializerMicroEntryVerifyRequestParameter(pydantic.BaseModel):
    """
    Serializer for MicroEntryVerifyRequestParameter handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    account_id: typing.Optional[str] = pydantic.Field(alias="accountId", default=None)
    customer_id: typing.Optional[str] = pydantic.Field(alias="customerId", default=None)
    experience: typing.Optional[str] = pydantic.Field(alias="experience", default=None)
    partner_id: typing.Optional[str] = pydantic.Field(alias="partnerId", default=None)
    redirect_uri: typing.Optional[str] = pydantic.Field(
        alias="redirectUri", default=None
    )
    webhook: typing.Optional[str] = pydantic.Field(alias="webhook", default=None)
    webhook_content_type: typing.Optional[str] = pydantic.Field(
        alias="webhookContentType", default=None
    )
    webhook_data: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(
        alias="webhookData", default=None
    )
    webhook_headers: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(
        alias="webhookHeaders", default=None
    )
