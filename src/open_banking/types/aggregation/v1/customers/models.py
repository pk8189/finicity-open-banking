"""File Generated by Sideko (sideko.dev)"""

import io
import typing


import pydantic

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class Customer(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    created_date: str = pydantic.Field(alias="createdDate")
    email_field: typing.Optional[str] = pydantic.Field(alias="email", default=None)
    first_name: typing.Optional[str] = pydantic.Field(alias="firstName", default=None)
    id: str = pydantic.Field(alias="id")
    last_modified_date: typing.Optional[str] = pydantic.Field(
        alias="lastModifiedDate", default=None
    )
    last_name: typing.Optional[str] = pydantic.Field(alias="lastName", default=None)
    phone: typing.Optional[str] = pydantic.Field(alias="phone", default=None)
    type: str = pydantic.Field(alias="type")
    username: str = pydantic.Field(alias="username")


class Customers(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    customers: typing.List[Customer] = pydantic.Field(alias="customers")
    displaying: int = pydantic.Field(alias="displaying")
    found: typing.Optional[int] = pydantic.Field(alias="found", default=None)
    more_available: bool = pydantic.Field(alias="moreAvailable")
