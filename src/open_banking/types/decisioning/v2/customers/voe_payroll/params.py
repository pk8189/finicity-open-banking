"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PayrollData(typing_extensions.TypedDict):
    """
    No description specified
    """

    dob: typing_extensions.Required[int]
    report_id: typing_extensions.NotRequired[str]
    ssn: typing_extensions.Required[str]


class _SerializerPayrollData(pydantic.BaseModel):
    """
    Serializer for PayrollData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    dob: int = pydantic.Field(alias="dob")
    report_id: typing.Optional[str] = pydantic.Field(alias="reportId", default=None)
    ssn: str = pydantic.Field(alias="ssn")


class ReportCustomField(typing_extensions.TypedDict):
    """
    No description specified
    """

    label: typing_extensions.NotRequired[str]
    shown: typing_extensions.NotRequired[bool]
    value: typing_extensions.NotRequired[str]


class _SerializerReportCustomField(pydantic.BaseModel):
    """
    Serializer for ReportCustomField handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    label: typing.Optional[str] = pydantic.Field(alias="label", default=None)
    shown: typing.Optional[bool] = pydantic.Field(alias="shown", default=None)
    value: typing.Optional[str] = pydantic.Field(alias="value", default=None)


class PayrollReportConstraints(typing_extensions.TypedDict):
    """
    No description specified
    """

    exclude_emp_info: typing_extensions.NotRequired[bool]
    market_segment: typing_extensions.NotRequired[str]
    pay_statements_from_date: typing_extensions.NotRequired[int]
    payroll_data: typing_extensions.Required[PayrollData]
    purpose: typing_extensions.NotRequired[str]
    report_custom_fields: typing_extensions.NotRequired[typing.List[ReportCustomField]]


class _SerializerPayrollReportConstraints(pydantic.BaseModel):
    """
    Serializer for PayrollReportConstraints handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    exclude_emp_info: typing.Optional[bool] = pydantic.Field(
        alias="excludeEmpInfo", default=None
    )
    market_segment: typing.Optional[str] = pydantic.Field(
        alias="marketSegment", default=None
    )
    pay_statements_from_date: typing.Optional[int] = pydantic.Field(
        alias="payStatementsFromDate", default=None
    )
    payroll_data: _SerializerPayrollData = pydantic.Field(alias="payrollData")
    purpose: typing.Optional[str] = pydantic.Field(alias="purpose", default=None)
    report_custom_fields: typing.Optional[typing.List[_SerializerReportCustomField]] = (
        pydantic.Field(alias="reportCustomFields", default=None)
    )
